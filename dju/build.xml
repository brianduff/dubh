<!-- $Id: build.xml,v 1.14 2000-08-20 21:31:47 briand Exp $ -->
  
<project name="dju" default="all" basedir=".">
  <target name="init">
    <tstamp/>

    <taskdef name="buildnumber" classname="org.dubh.tool.ant.BuildNumber" />
    
    <property name="product" value="Dubh Java Utilities" />
    <property name="majorversion" value="2" />
    <property name="minorversion" value="0" />

    <property name="cvsmodule" value="dju" />
    <buildnumber propertyfile="${cvsmodule}-build.properties" />
    <property file="${cvsmodule}-build.properties" />
    <property name="srcdir" value="${cvsmodule}/src" />
    <property name="classdir" value="${cvsmodule}/class" />
    <property name="jardir" value="${cvsmodule}/lib" />
    <property name="jarfile" value="${jardir}/${cvsmodule}-${majorversion}.${minorversion}.jar" />
    <property name="cvsroot" value="/usr/local/cvsroot" />
    <property name="classpath" value="" />
    <property name="snapshot" value="${cvsmodule}/src.zip" />
    <property name="docdir" value="${cvsmodule}/doc" />    
    <property name="javadocdir" value="${docdir}/api" />
    <property name="javadocpkg" value="org.javalobby.dju.*" />
    <property name="javadoctitle" value="${product} ${majorversion}.${minorversion}.${dubh.buildnumber}" />
    <property name="distribtmp" value="distribtmp" />
    <property name="distribname" value="${cvsmodule}/${cvsmodule}-${majorversion}.${minorversion}.${dubh.buildnumber}-distrib.zip" />

    <echo message="${cvsmodule} build number ${dubh.buildnumber} started ${TODAY} at ${TSTAMP}" />
  </target>
  
  
  <!-- Pull source code from CVS and set up initial dirs -->
  <target name="pullsrc" depends="init">
    <cvs  cvsRoot="${cvsroot}"
          command="export"
          package="${cvsmodule}"
          dest="."
          date="now"
          quiet="true"
          failonerror="true"
    />
      
      
  </target>
  
  <!-- Compile all source code -->
  <target name="src" depends="pullsrc">
    <mkdir dir="${classdir}" />
    <javac  srcdir="${srcdir}"
            destdir="${classdir}"
            classpath="${classpath}">
      <exclude name="org/javalobby/dju/ui/treetable/**" />

    </javac>            
  </target>

  <!-- Create the JAR file -->
  <target name="jar" depends="src">
    <mkdir dir="${jardir}" />
    <jar  jarfile="${jarfile}" basedir="${classdir}" />
  </target>

  <!-- Create a source code snapshot -->
  <target name="src-snapshot" depends="src">
    <zip  zipfile="${snapshot}" 
          basedir="${srcdir}" />
  </target>

  <!-- Create javadoc -->
  <target name="javadoc" depends="pullsrc">
    <mkdir dir="${javadocdir}" />

    <javadoc  sourcepath="${srcdir}"
              destdir="${javadocdir}"
              author="true"
              version="true"
              use="true"
              windowtitle="${javadoctitle}"
              doctitle="&lt;h1&gt;${javadoctitle}&lt;/h1&gt;"
              packagenames="${javadocpkg}"
    />
  </target>

  <!-- The all target -->
  <target name="all" depends="jar,src-snapshot,javadoc" />

  <!-- The clean target obliterates all traces of the module from the build dir -->
  <target name="clean" depends="init">
    <deltree dir="${cvsmodule}" />
  </target>

  <!-- The distrib target creates a binary distribution of the module and zips it up. -->
  <!-- The distribution consists of all the directories after building, -->
  <!-- excluding the srcdir and classdir. -->
  <target name="distrib" depends="all">
    <!-- Remove any existing distribtmp -->
    <deltree dir="${distribtmp}" />
    <mkdir dir="${distribtmp}" />

    <copydir  src="${cvsmodule}"
              dest="${distribtmp}"
              excludes="${srcdir},${classdir}"
    />

    <zip      zipfile="${distribname}"
              basedir="${distribtmp}/${cvsmodule}"
    />

    <deltree dir="${distribtmp}" />
  </target>

  
</project>
