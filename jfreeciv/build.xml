<!-- $Id: build.xml,v 1.10 2001-11-04 02:10:35 briand Exp $ -->

<!-- Just Testing -->
<!-- Build file for JFreeCiv -->
<!-- More information on Ant can be found at http://jakarta.apache.org -->

<project name="jfreeciv" default="src" basedir=".">
  <target name="init">
    <tstamp/>


    <!-- The buildnumber task is in the devtools CVS module. It must be in -->
    <!-- the classpath before building any other module -
    <taskdef name="buildnumber" classname="org.dubh.tool.ant.BuildNumber" />
    -->

    <!-- The name and main version number of this project. -->
    <property name="product" value="JFreeciv" />
    <property name="toppackage" value="org.freeciv" />
    <property name="majorversion" value="1" />
    <property name="minorversion" value="0" />

    <!-- The CVS module for this project. This should usually be a single top level directory -->
    <property name="cvsmodule" value="jfreeciv" />

    <property name="srcdir" value="src" />
    <property name="classdir" value="class" />
    <property name="distdir" value="dist" />
    <property name="srcdistdir" value="srcdist" />
    <property name="jardir" value="lib" />
    <property name="moduleshort" value="${cvsmodule}-${majorversion}.${minorversion}" />
    <property name="modulelong" value="${moduleshort}" />
    <property name="jarfile" value="${jardir}/${moduleshort}.jar" />

    <!-- The classpath. You should really only include things that are guaranteed to be in the jardir at build time -->
    <property name="classpath" value="" />
    <property name="snapshot" value="${cvsmodule}-src.zip" />
    <property name="docdir" value="doc" />    
    <property name="javadocdir" value="javadoc" />
    <property name="javadocpkg" value="org.*" />
    <property name="javadoctitle" value="${product} ${modulelong}" />


    <!-- Comma separated list of files that should be copied from the source path into the classpath. You can use wildcards -->
    <property name="copypatterns" value="**/*.gif,**/*.properties,**/*.png" />

    <echo message="${cvsmodule} build started ${TODAY} at ${TSTAMP}" />
  </target>
  
  
  <!-- Pull source code from CVS and set up initial dirs -->
  <target name="pullsrc" depends="init" if="cvsroot">
    <cvs  cvsRoot="${cvsroot}"
          command="export"
          package="${cvsmodule}"
          dest="."
          date="now"
          quiet="true"
          failonerror="true"
    />
  </target>


  <!-- Copy files from the source tree to the output path -->
  <target name="copyfiles" depends="pullsrc">
    <copy todir="${classdir}">
      <fileset dir="${srcdir}" includes="${copypatterns}" />
    </copy>
   
  </target>


  
  <!-- Compile all source code -->
  <target name="src" depends="pullsrc,copyfiles">
    <mkdir dir="${classdir}" />
    <javac  srcdir="${srcdir}"
            destdir="${classdir}"
            classpath="${classpath}"
            deprecation="true" >

    </javac>            
  </target>

  <!-- Create the JAR file -->
  <target name="jar" depends="src">
    <mkdir dir="${jardir}" />
    <jar  jarfile="${jarfile}" basedir="${classdir}" />
  </target>


  <!-- Create javadoc -->
  <target name="javadoc" depends="pullsrc">
    <mkdir dir="${javadocdir}" />

    <javadoc  sourcepath="${srcdir}"
              classpath="${classpath}"
              destdir="${javadocdir}"
              author="true"
              version="true"
              use="true"
              windowtitle="${javadoctitle}"
              doctitle="${javadoctitle} build ${DSTAMP}${TSTAMP}"
              packagenames="${javadocpkg}">

    </javadoc>
  </target>
  
  <target name="dist" depends="jar,javadoc">

    <mkdir dir="${distdir}" />

    <mkdir dir="${distdir}/lib" />
    <copy todir="${distdir}/lib">
      <fileset dir="${jardir}" includes="*.jar" />
    </copy>

    <mkdir dir="${distdir}/src" />
    <copy todir="${distdir}/src">
      <fileset dir="${srcdir}" />
    </copy>

    <mkdir dir="${distdir}/doc/api" />
    <copy todir="${distdir}/doc/api">
      <fileset dir="${javadocdir}" />
    </copy>

    <copy todir="${distdir}">
      <fileset dir=".">
        <include name="Changelog.txt" />
        <include name="NOTES.txt" />
        <include name="Readme.txt" />
        <include name="TODO.txt" />
      </fileset>
    </copy>

  </target>

  <target name="srcdist" depends="javadoc">
    
    <mkdir dir="${srcdistdir}" />

    <mkdir dir="${srcdistdir}/src" />
    <copy todir="${srcdistdir}/src">
      <fileset dir="${srcdir}" />
    </copy>

    <mkdir dir="${srcdistdir}/doc/api" />
    <copy todir="${srcdistdir}/doc/api">
      <fileset dir="${javadocdir}" />
    </copy>

    <copy todir="${srcdistdir}">
      <fileset dir=".">
        <include name="build.xml" />
        <include name="Changelog.txt" />
        <include name="NOTES.txt" />
        <include name="Readme.txt" />
        <include name="TOTO.txt" />
      </fileset>
    </copy>

  </target>

  <!-- The clean target obliterates all traces of the module from the build dir -->
  <target name="clean" depends="init">
    <delete dir="${classdir}" />
    <delete dir="${jardir}" />
    <delete dir="${javadocdir}" />
    <delete file="${snapshot}" />
    <delete dir="${distdir}" />
    <delete dir="${srcdistdir}" />
  </target>

  
</project>
