// ---------------------------------------------------------------------------
//   NewsAgent: A Java USENET Newsreader
//   $Id: SendAgentWarningsDialog.java,v 1.3 1999-03-22 23:46:43 briand Exp $
//   Copyright (C) 1997-9  Brian Duff
//   Email: bduff@uk.oracle.com
//   URL:   http://st-and.compsoc.org.uk/~briand/newsagent/
// ---------------------------------------------------------------------------
//   This program is free software; you can redistribute it and/or modify
//   it under the terms of the GNU General Public License as published by
//   the Free Software Foundation; either version 2 of the License, or
//   (at your option) any later version.
//
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   GNU General Public License for more details.
//
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
// ---------------------------------------------------------------------------
//   Original Author: Brian Duff
//   Contributors:
// ---------------------------------------------------------------------------
//   See bottom of file for revision history
package dubh.apps.newsagent.agent;

import java.awt.*;
import java.awt.event.*;
import dubh.utils.ui.GridBagConstraints2;
import dubh.utils.misc.Debug;
import javax.swing.*;

/**
 * This dialogue displays  errors and warnings generated by Send Agents when
 * a message is about to be posted.<P>
 * Version History: <UL>
 * <LI>0.1 [07/06/98]: Initial Revision
 @author Brian Duff
 @version 0.1 [07/06/98]
 */
class SendAgentWarningsDialog extends JDialog {
  private JPanel panMain = new JPanel();
  private GridBagLayout gridBagLayout1 = new GridBagLayout();
  private JLabel labDesc1 = new JLabel();
  private JLabel labDesc2 = new JLabel();
  private DefaultListModel lmMessages = new DefaultListModel();
  private JList listMessages = new JList(lmMessages);
  private JScrollPane scrollMessageList = new JScrollPane(listMessages);
  private JLabel labQuestion = new JLabel();
  private JButton cmdPost = new JButton();
  private JButton cmdCancel = new JButton();
  private boolean m_isError = false;
  private boolean m_wasCancelled = true;

  /**
   * Constructs a SendAgentsWarningsDialog with the specified Frame as a parent
   */
  public SendAgentWarningsDialog(Frame parent) {
    super(parent, "Send Agent Warnings", true);
    try {
      jbInit();
      getContentPane().add(panMain);
      pack();
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }

  private void jbInit() throws Exception{
    panMain.setSize(new Dimension(438, 300));
    labDesc1.setText("The installed Send Agents have reported one or more errors or warnings");
    labDesc2.setText("about the contents of your posting:");
    labQuestion.setText("Are you sure you want to post this message?");
    cmdPost.setText("Post");
    cmdPost.addActionListener(new PostButtonListener());
    cmdCancel.setText("Cancel");
    cmdCancel.addActionListener(new CancelButtonListener());
    panMain.setLayout(gridBagLayout1);
    panMain.add(labDesc1, new GridBagConstraints2(0, 0, 2, 1, 1.0, 0.0
            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(5, 5, 0, 5), 0, 0));
    panMain.add(labDesc2, new GridBagConstraints2(0, 1, 2, 1, 1.0, 0.0
            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 5, 5, 5), 0, 0));
    panMain.add(scrollMessageList, new GridBagConstraints2(0, 2, 2, 1, 1.0, 1.0
            ,GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(5, 5, 5, 5), 0, 0));
    panMain.add(labQuestion, new GridBagConstraints2(0, 3, 2, 1, 1.0, 0.0
            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(5, 5, 5, 5), 0, 0));
    panMain.add(cmdPost, new GridBagConstraints2(0, 4, 1, 1, 1.0, 0.0
            ,GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(5, 5, 5, 2), 0, 0));
    panMain.add(cmdCancel, new GridBagConstraints2(1, 4, 1, 1, 0.0, 0.0
            ,GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(5, 0, 5, 5), 0, 0));
  }

  /**
   * Add an error to the dialogue. The first time you add an error, the post
   * button will be disabled, and the message above the buttons will be
   * changed to tell the user that the dialogue can only be cancelled.
   @param errMess The error message
   @param agentName The name of the agent that raised an error
   */
  public void addError(String errMess, String agentName) {
     if (!m_isError) {
        m_isError = true;
        cmdPost.setVisible(false);
        labQuestion.setText("You can't post this message until you correct any errors.");
        panMain.validate();
     }
     addListItem("Error from "+agentName+": "+errMess);
  }

  /**
   * Add a warning to the dialogue.
   @param warnMess The warning message
   @param agentName The name of the agent that raised the warning
   */
  public void addWarning(String warnMess, String agentName) {
     addListItem("Warning from "+agentName+": "+warnMess);
  }

  /**
   * Use this method to determine whether the dialogue was cancelled after it
   * has been removed from display.
   @return true if the message is still to be posted, false if the user chose
     to cancel or postpone sending the message.
   */
  public boolean isPostingOk() {
     return !m_wasCancelled;
  }

// PRIVATE IMPLEMENTATION

  private void addListItem(String itemText) {
     lmMessages.addElement(itemText);
     listMessages.validate();
  }


// EVENT HANDLING

  /**
   * Event class for clicks on the Post button
   */
  class PostButtonListener implements ActionListener {
     public void actionPerformed(ActionEvent e) {
        m_wasCancelled = false;
        setVisible(false);
     }
  }

  /**
   * Event class for clicks on the Cancel button
   */
  class CancelButtonListener implements ActionListener {
     public void actionPerformed(ActionEvent e) {
        m_wasCancelled = true;
        setVisible(false);
     }
  }
}